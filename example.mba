; this is an example file for showing how to write code
; every program must have __START and __INTERRUPT labels somewhere
; code starts executing at the __START label
; code jumps to __INTERRUPT when the processor gets an interrupt flag

; mode flags are ZVXYIN
; Z for zero page, V for value, X for x index, Y for y index, I for immediate, N for indirect
; order matters too

.C ACC_INIT, 0b1011 ; example constant, could be used to initialize something like the accumulator

.L __START
	sta 0x8009 ; the assembler is NOT case sensitive, so STA 0X8009 also works
	; also, writing above 0x7FFF controls the hardware latch, so this instruction turns on SRAM and IO
	LDX 0,I		; load x with 0
	TXS		; transer x reg to stack reg

	LDA ACC_INIT,I ; using that constant above
.L INFINITE_LOOP
	INC
	JMP INFINITE_LOOP
	; keep adding 1 into accumulator and jumping back to the infinite loop label

.L __INTERRUPT
	RTI	; just put rti of nothing to do for interrupts, this immediately jumps back
